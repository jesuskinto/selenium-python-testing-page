{"version":3,"sources":["components/JavascriptAlert.js","components/JqueryDate.js","components/DataDownload.js","components/DataDragAndDrop.js","components/CheckBox.js","components/BootstrapModal.js","components/TableSortAndSearch.js","components/DataLoading.js","components/SimpleForm.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["JavascriptAlert","Card","Header","Body","Title","Text","Button","variant","onClick","alert","JqueryDate","useState","Date","value","onChange","toDateString","DataDownload","href","download","src","alt","DataDragAndDrop","CheckBox","checkboxValue","toggleCheckbox","checkboxesValues","toggleCheckboxes","id","type","checked","prevState","className","map","checkbox","key","newCheckBoxes","changeCheckboxes","length","reduce","a","b","BootstrapModal","show","setShow","initialUser","firstname","lastname","email","showForm","setShowForm","user","setUser","modalUser","setModalUser","updateUser","newUser","handleCloseForm","Modal","onHide","closeButton","size","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","e","target","Footer","TableSortAndSearch","movies","require","DataLoading","movieName","setMovieName","filteredMovies","filteredMoviesChange","todo","setTodo","onSearch","randomTime","min","max","Math","ceil","floor","random","title","func","wait","immediate","timeout","debounce","setTimeout","_value","toLowerCase","filter","m","search","fetchData","onSelectItem","some","item","_todo","push","add","InputGroup","FormControl","Dropdown","Menu","movie","Item","eventKey","SimpleForm","message","setMessage","showMessage","toggleShowMessage","num1","setNum1","num2","setNum2","showValue","toggleShowValue","parseFloat","Home","to","App","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b29a526.chunk.js","sourcesContent":["import { Card, Button } from 'react-bootstrap'\n\nfunction JavascriptAlert() {\n  const openSimpleAlert = () => alert(\"Hello world\");\n\n  return <div>\n    <Card>\n      <Card.Header>JavascriptAlert</Card.Header>\n      <Card.Body>\n        <Card.Title>Simple Alert</Card.Title>\n        <Card.Text>\n          Open the alert and verify the message matches <strong>Hello world</strong>\n        </Card.Text>\n        <Button variant=\"primary\" onClick={openSimpleAlert} >Click</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default JavascriptAlert","import { useState } from \"react\";\nimport { Card } from 'react-bootstrap'\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\n\n\nfunction JqueryDate() {\n  const [value, onChange] = useState([new Date(), new Date()]);\n  return <div>\n    <Card>\n      <Card.Header>Js DateRangePicker</Card.Header>\n      <Card.Body>\n        <Card.Title>Js DateRangePicker</Card.Title>\n        <ul>\n          <li>Validate that a DateRangePicker matches the dates of <strong>Current date</strong>.</li>\n          <li>Change the data of the DateRangePicker and validate that the <strong>Current date</strong> is updated correctly.</li>\n          <li>Press the x of the DateRangePicker and validate that the <strong>Current date</strong> fields are cleared.</li>\n        </ul>\n        <DateRangePicker\n          onChange={onChange}\n          value={value}\n        />\n        <br />\n        <br />\n        Current date:\n        <ul>\n          <li>From: <strong>{value ? value[0].toDateString() : ''}</strong></li>\n          <li>To:   <strong>{value ? value[1].toDateString() : ''}</strong></li>\n        </ul>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default JqueryDate","import { Card } from 'react-bootstrap'\n\nfunction DataDownload() {\n  return <div>\n    <Card>\n      <Card.Header>Data Download</Card.Header>\n      <Card.Body>\n        <Card.Title>Data Download</Card.Title>\n        <ul>\n          <li>Click on the image and validate that an image called <strong>react-logo</strong> is downloaded</li>\n        </ul>\n        <a href=\"/logo512.png\" download=\"react-logo\">\n          <img src=\"/logo512.png\" alt=\"logo\" />\n        </a>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default DataDownload","import { Card, Button } from 'react-bootstrap'\n\nfunction DataDragAndDrop() {\n  return <div>\n    <Card>\n      <Card.Header>Featured</Card.Header>\n      <Card.Body>\n        <Card.Title>Special title treatment</Card.Title>\n        <Card.Text>\n          With supporting text below as a natural lead-in to additional content.\n        </Card.Text>\n        <Button variant=\"primary\">Go somewhere</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default DataDragAndDrop","import { useState } from 'react';\nimport { Card, Button } from 'react-bootstrap'\n\nfunction CheckBox() {\n  const [checkboxValue, toggleCheckbox] = useState(false);\n\n  const [checkboxesValues, toggleCheckboxes] = useState([false, false, false, false, false]);\n\n  function changeCheckboxes(key) {\n    const newCheckBoxes = [...checkboxesValues]\n    newCheckBoxes[key] = !checkboxesValues[key]\n    toggleCheckboxes(newCheckBoxes)\n  }\n\n  function unCheckAll() {\n    toggleCheckboxes([false, false, false, false, false])\n  }\n\n  function checkAll() {\n    toggleCheckboxes([true, true, true, true, true])\n  }\n\n  return <div id=\"checkboxes\">\n    <h3>This would be a basic example to start with checkboxes using selenium.</h3>\n    <p>\n      The HTML input \"checkbox\" is an input element to enter an array of different\n      values.\n    </p>\n    <p>\n      Each input type checkbox has value attribute which is used to define the value submitted by the checkbox.\n    </p>\n    <Card>\n      <Card.Header>CheckBox</Card.Header>\n      <Card.Body>\n        <Card.Title>Single Checkbox</Card.Title>\n        <Card.Text>\n          Clicking on the checkbox will display a success message.\n        </Card.Text>\n        <label>\n          Checkbox:\n          <input type=\"checkbox\" checked={checkboxValue} onChange={() => toggleCheckbox(prevState => !prevState)} />\n        </label>\n        <div className=\"message\">Message: <span>{checkboxValue ? 'success' : ''}</span></div>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card>\n      <Card.Header>CheckBox</Card.Header>\n      <Card.Body>\n        <Card.Title>Checkboxes</Card.Title>\n        Check the below points before automating\n        <ul>\n          <li>Click on 'Check All' to check all checkboxes at once.</li>\n          <li>When you check all the checkboxes, button will change to 'Uncheck All'</li>\n          <li>When you uncheck at least one checkbox, button will change to 'Check All'</li>\n        </ul>\n        {checkboxesValues.map((checkbox, key) =>\n          <label key={key}>\n            Checkbox {key + 1}:\n            <input className=\"checkboxes\" type=\"checkbox\" checked={checkbox} onChange={() => changeCheckboxes(key)} />\n          </label>\n        )}\n        <br />\n        {checkboxesValues.length === checkboxesValues.reduce((a, b) => a + b) ?\n          <Button variant=\"primary\" onClick={unCheckAll}>Uncheck All</Button> :\n          <Button variant=\"primary\" onClick={checkAll}>Check All</Button>\n        }\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default CheckBox","import { useState } from 'react';\nimport { Card, Button, Modal, Form, Row, Col } from 'react-bootstrap'\n\nfunction BootstrapModal() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const initialUser = {\n    firstname: '',\n    lastname: '',\n    email: ''\n  }\n\n  const [showForm, setShowForm] = useState(false);\n  const [user, setUser] = useState(initialUser);\n  const [modalUser, setModalUser] = useState(initialUser);\n\n  const updateUser = (key, value) => {\n    const newUser = { ...modalUser }\n    newUser[key] = value\n    setModalUser(newUser)\n  }\n\n  const handleCloseForm = () => {\n    setModalUser(initialUser)\n    setShowForm(false)\n  }\n\n  const handleSaveForm = () => {\n    setUser(modalUser)\n    setModalUser(initialUser)\n    setShowForm(false)\n  }\n\n  const handleCleanUser = () => setUser(initialUser)\n\n  const handleShowForm = () => setShowForm(true);\n\n  return <div id=\"bootstrap-modals\">\n    <Card>\n      <Card.Header>BootstrapModal</Card.Header>\n      <Card.Body>\n        <Card.Title>Single Modal</Card.Title>\n        <Card.Text>\n          Check that the text inside the modal is equal to: <strong>Woohoo, you're reading this text in a modal!</strong>\n        </Card.Text>\n        <Button variant=\"primary\" onClick={handleShow}>Go somewhere</Button>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        </Modal>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card>\n      <Card.Header>BootstrapModal</Card.Header>\n      <Card.Body>\n        <Card.Title>Modal Form</Card.Title>\n        Evaluate the following points:\n        <ul>\n          <li>Opening of the modal.</li>\n          <li>Set fields (Name, Lastname and Email).</li>\n          <li>Save Changes, Changes must be reflected in the user information section.</li>\n          <li>After saving the changes Verify that when opening the modal the form is empty</li>\n          <li>Press the clean info button and verify that the user information is cleared.</li>\n        </ul>\n        <Button variant=\"primary\" size=\"sm\" onClick={handleShowForm}>Open Form</Button>\n        <Modal show={showForm} onHide={handleCloseForm}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal Form</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextFirstName\">\n                <Form.Label column sm=\"2\">\n                  FirstName\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" placeholder=\"Firstname\" value={modalUser.firstname} onChange={e => updateUser('firstname', e.target.value)} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextLastname\">\n                <Form.Label column sm=\"2\">\n                  Lastname\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" placeholder=\"Lastname\" value={modalUser.lastname} onChange={e => updateUser('lastname', e.target.value)} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"2\">\n                  Email\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"email\" placeholder=\"Email\" value={modalUser.email} onChange={e => updateUser('email', e.target.value)} />\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleSaveForm}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <br />\n        <br />\n        User Info:\n        <ul>\n          <li>firstname: {user.firstname}</li>\n          <li>lastname: {user.lastname}</li>\n          <li>email: {user.email}</li>\n        </ul>\n        <Button variant=\"danger\" size=\"sm\" onClick={handleCleanUser}>Clean info</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default BootstrapModal","import { Card, Button } from 'react-bootstrap'\n\nfunction TableSortAndSearch() {\n  return <div>\n    <Card>\n      <Card.Header>Featured</Card.Header>\n      <Card.Body>\n        <Card.Title>Special title treatment</Card.Title>\n        <Card.Text>\n          With supporting text below as a natural lead-in to additional content.\n        </Card.Text>\n        <Button variant=\"primary\">Go somewhere</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default TableSortAndSearch","import { useState } from 'react';\nimport { Card, Dropdown, InputGroup, FormControl } from 'react-bootstrap'\nconst movies = require('../movies.json')\nconst DEBOUNCE_TIME = 100\n\nfunction DataLoading() {\n  const [movieName, setMovieName] = useState('');\n  const [filteredMovies, filteredMoviesChange] = useState([]);\n  const [todo, setTodo] = useState([]);\n\n\n  const debounce = (func, wait, immediate) => {\n    var timeout;\n    return function () {\n      var context = this, args = arguments;\n      var later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n\n  const add = (value) => {\n    if (!value) return\n    if (todo.some(item => item === value)) return;\n    const _todo = [...todo]\n    _todo.push(value)\n    setMovieName('')\n    setTodo(_todo)\n  }\n\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const fetchData = (value) => {\n    const _value = value.toLowerCase()\n    filteredMoviesChange(movies.filter(m => m.title.toLowerCase().search(_value) !== -1))\n  }\n\n  const onSearch = value => {\n    if (value) {\n      const randomTime = getRandomInt(800, 2000)\n      filteredMoviesChange([{ title: 'loading' }])\n      debounce(setTimeout(() => fetchData(value), randomTime), DEBOUNCE_TIME)\n    } else filteredMoviesChange([])\n    setMovieName(value)\n  }\n\n  const onSelectItem = value => {\n    if (value === 'loading') return;\n    filteredMoviesChange([])\n    add(value)\n  }\n\n  return <div id=\"data-loading\">\n    <Card>\n      <Card.Header>DataLoading</Card.Header>\n      <Card.Body>\n        <Card.Title>Search and add Movie</Card.Title>\n        <ul>\n          <li>Search and select movies: <strong>WALL·E, Interstellar and Ratatouille</strong>.</li>\n          <li>Validate that the items appear in the list of selected movies.</li>\n        </ul>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n            placeholder=\"Search Movie\"\n            value={movieName}\n            onChange={e => onSearch(e.target.value)}\n          />\n        </InputGroup>\n        {filteredMovies.length ?\n          <Dropdown.Menu show>\n            {filteredMovies.map((movie, key) =>\n              <Dropdown.Item\n                key={key}\n                eventKey={key}\n                onClick={() => onSelectItem(movie.title)}>\n                {movie.title}\n              </Dropdown.Item>)}\n          </Dropdown.Menu> : ''\n        }\n        <br />\n        <h5>List of Movies</h5>\n        <ul>\n          {todo.map((item, key) => <li key={key}>{item}</li>)}\n        </ul>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default DataLoading","import { useState } from 'react';\nimport { Card, Button } from 'react-bootstrap'\n\nfunction SimpleForm() {\n  const [message, setMessage] = useState('');\n  const [showMessage, toggleShowMessage] = useState(false);\n\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [showValue, toggleShowValue] = useState(false);\n\n  function getTotal() { return parseFloat(num1) + parseFloat(num2) }\n\n  return <div id=\"simple-form\">\n    <Card>\n      <Card.Header>Simple Form</Card.Header>\n      <Card.Body>\n        <Card.Title>Input Message</Card.Title>\n        <ul>\n          <li>First Let us try be very simple with only one input field and a Button</li>\n          <li>Enter your message</li>\n          <li>Click on 'Show Message' button to display message entered in input field</li>\n        </ul>\n        {' '}\n        <input value={message} onChange={e => { toggleShowMessage(false); setMessage(e.target.value) }} />\n        <br />\n        <br />\n        <Button variant=\"primary\" onClick={() => toggleShowMessage(true)} >Show Message</Button>\n        <br />\n        <br />\n        <div className=\"message\">Message: <span>{showMessage ? message : ''}</span></div>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card>\n      <Card.Header>Simple Form</Card.Header>\n      <Card.Body>\n        <Card.Title>Sum of inputs</Card.Title>\n        <ul>\n          <li>First Let us try with Two input fields and a Button</li>\n          <li>Enter Value for a</li>\n          <li>Enter Value for b</li>\n          <li>Click on 'Get Total' button to display the sum of two numbers 'a and b'</li>\n        </ul>\n        <label>Num 1: <input type=\"number\" value={num1} onChange={e => { toggleShowValue(false); setNum1(e.target.value) }} /></label>\n        <br />\n        <label>Num 2: <input type=\"number\" value={num2} onChange={e => { toggleShowValue(false); setNum2(e.target.value) }} /></label>\n        <br />\n        <br />\n        <Button variant=\"primary\" onClick={() => toggleShowValue(true)} >Get Total</Button>\n        <br />\n        <br />\n        <div className=\"value\">Total value: <span>{showValue ? getTotal() : ''}</span></div>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default SimpleForm","import { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return <div>\n    <h1>Welcome to QA test!</h1>\n    <h2>List of sections:</h2>\n    <ul>\n      <li><Link to=\"/simple-form\">Simple-form</Link></li>\n      <li><Link to=\"/checkbox\">Checkbox</Link></li>\n      <li><Link to=\"/javascript-alert\">Javascript-alert</Link></li>\n      <li><Link to=\"/bootstrap-modal\">Bootstrap-modal</Link></li>\n      <li><Link to=\"/jquery-date\">Jquery-date</Link></li>\n      {/* <li><Link to=\"/table-sort-and-search\">table-sort-and-search</Link></li> */}\n      <li><Link to=\"/data-download\">Data-download</Link></li>\n      <li><Link to=\"/data-loading\">Data-loading</Link></li>\n      {/* <li><Link to=\"/data-drag-and-drop\">data-drag-and-drop</Link></li> */}\n    </ul>\n  </div>;\n}\n\nexport default Home","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport JavascriptAlert from './components/JavascriptAlert'\nimport JqueryDate from './components/JqueryDate'\nimport DataDownload from './components/DataDownload'\nimport DataDragAndDrop from './components/DataDragAndDrop'\nimport CheckBox from './components/CheckBox'\nimport BootstrapModal from './components/BootstrapModal'\nimport TableSortAndSearch from './components/TableSortAndSearch'\nimport DataLoading from './components/DataLoading'\nimport SimpleForm from './components/SimpleForm'\nimport Home from './components/Home'\n\n\nimport {\n  Card, Button\n} from 'react-bootstrap'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Card body>\n          <Link to=\"/\"><Button size=\"sm\">Go home</Button></Link>\n          <br />\n          <br />\n          <Switch>\n            <Route path=\"/simple-form\">\n              <SimpleForm />\n            </Route>\n            <Route path=\"/checkbox\">\n              <CheckBox />\n            </Route>\n            <Route path=\"/javascript-alert\">\n              <JavascriptAlert />\n            </Route>\n            <Route path=\"/bootstrap-modal\">\n              <BootstrapModal />\n            </Route>\n            <Route path=\"/jquery-date\">\n              <JqueryDate />\n            </Route>\n            <Route path=\"/table-sort-and-search\">\n              <TableSortAndSearch />\n            </Route>\n            <Route path=\"/data-download\">\n              <DataDownload />\n            </Route>\n            <Route path=\"/data-loading\">\n              <DataLoading />\n            </Route>\n            <Route path=\"/data-drag-and-drop\">\n              <DataDragAndDrop />\n            </Route>\n            <Route path=\"/simple-form\">\n              <SimpleForm />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Card>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}