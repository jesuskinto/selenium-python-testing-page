{"version":3,"sources":["components/JavascriptAlert.js","components/JqueryDate.js","components/CheckBox.js","components/BootstrapModal.js","components/DataLoading.js","components/SimpleForm.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["JavascriptAlert","id","Card","Header","Body","Title","Text","Button","variant","onClick","alert","JqueryDate","useState","Date","value","onChange","locale","className","toDateString","CheckBox","checkboxValue","toggleCheckbox","checkboxesValues","toggleCheckboxes","type","checked","prevState","map","checkbox","key","newCheckBoxes","changeCheckboxes","length","reduce","a","b","BootstrapModal","show","setShow","initialUser","firstname","lastname","email","showForm","setShowForm","user","setUser","modalUser","setModalUser","updateUser","newUser","handleCloseForm","Modal","onHide","closeButton","size","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","e","target","Footer","movies","require","DataLoading","movieName","setMovieName","filteredMovies","filteredMoviesChange","todo","setTodo","onSearch","randomTime","min","max","Math","ceil","floor","random","title","func","wait","immediate","timeout","debounce","setTimeout","_value","toLowerCase","filter","m","search","fetchData","onSelectItem","some","item","_todo","push","add","Alert","InputGroup","FormControl","Dropdown","Menu","movie","Item","eventKey","SimpleForm","message","setMessage","showMessage","toggleShowMessage","num1","setNum1","num2","setNum2","showValue","toggleShowValue","parseFloat","Home","to","App","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2hVAmBeA,MAjBf,WAGE,OAAO,qBAAKC,GAAG,mBAAR,SACL,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,8BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,2BACA,eAACH,EAAA,EAAKI,KAAN,4DACgD,2DAEhD,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAVR,kBAAMC,MAAM,uBAU9B,4B,wBCoBOC,MA5Bf,WACE,MAA0BC,mBAAS,CAAC,IAAIC,KAAQ,IAAIA,OAApD,mBAAOC,EAAP,KAAcC,EAAd,KACA,OAAO,8BACL,eAACb,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,iCACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,iCACA,+BACE,+FAAiE,kDAAjE,4BACA,2FAA6D,kDAA7D,6BAEF,cAAC,IAAD,CACEW,OAAQ,KACRD,SAAUA,EACVD,MAAOA,IAET,uBACA,uBAZF,gBAcE,qBAAIG,UAAU,eAAd,UACE,wCAAU,iCAASH,EAAQA,EAAM,GAAGI,eAAiB,QACrD,wCAAU,iCAASJ,EAAQA,EAAM,GAAGI,eAAiB,oB,QC8ChDC,MArEf,WACE,MAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAEA,EAA6CT,mBAAS,EAAC,GAAO,GAAO,GAAO,GAAO,IAAnF,mBAAOU,EAAP,KAAyBC,EAAzB,KAgBA,OAAO,sBAAKtB,GAAG,aAAR,UACL,wGACA,qHAIA,0IAGA,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,uBACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,8BACA,cAACH,EAAA,EAAKI,KAAN,uEAGA,8CAEE,uBAAOL,GAAG,kBAAkBuB,KAAK,WAAWC,QAASL,EAAeL,SAAU,kBAAMM,GAAe,SAAAK,GAAS,OAAKA,WAEnH,sBAAKT,UAAU,UAAf,sBAAkC,+BAAOG,EAAgB,UAAY,cAGzE,uBACA,eAAClB,EAAA,EAAD,CAAMe,UAAU,WAAhB,UACE,cAACf,EAAA,EAAKC,OAAN,uBACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,yBADF,2CAGE,+BACE,uFACA,wGACA,8GAEDiB,EAAiBK,KAAI,SAACC,EAAUC,GAAX,OACpB,8CACYA,EAAM,EADlB,IAEE,uBAAOZ,UAAU,aAAaO,KAAK,WAAWC,QAASG,EAAUb,SAAU,kBAnDrF,SAA0Bc,GACxB,IAAMC,EAAa,YAAOR,GAC1BQ,EAAcD,IAAQP,EAAiBO,GACvCN,EAAiBO,GAgDwEC,CAAiBF,QAFxFA,MAKd,uBACCP,EAAiBU,SAAWV,EAAiBW,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACjE,cAAC5B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAlDlC,WACEc,EAAiB,EAAC,GAAO,GAAO,GAAO,GAAO,KAiDxC,yBACA,cAAChB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA/ClC,WACEc,EAAiB,EAAC,GAAM,GAAM,GAAM,GAAM,KA8CpC,iC,0CC2DKa,MAzHf,WACE,MAAwBxB,oBAAS,GAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KAIMC,EAAc,CAClBC,UAAW,GACXC,SAAU,GACVC,MAAO,IAGT,EAAgC9B,oBAAS,GAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KACA,EAAwBhC,mBAAS2B,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAkClC,mBAAS2B,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,SAACpB,EAAKf,GACvB,IAAMoC,EAAO,eAAQH,GACrBG,EAAQrB,GAAOf,EACfkC,EAAaE,IAGTC,EAAkB,WACtBH,EAAaT,GACbK,GAAY,IAad,OAAO,sBAAK3C,GAAG,mBAAR,UACL,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,6BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,2BACA,eAACH,EAAA,EAAKI,KAAN,gEACoD,qFAEpD,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzCb,kBAAM6B,GAAQ,IAyC3B,0BACA,eAACc,EAAA,EAAD,CAAOnD,GAAG,eAAeoC,KAAMA,EAAMgB,OA3CvB,kBAAMf,GAAQ,IA2C5B,UACE,cAACc,EAAA,EAAMjD,OAAP,CAAcmD,aAAW,EAAzB,SACE,cAACF,EAAA,EAAM/C,MAAP,8BAEF,cAAC+C,EAAA,EAAMhD,KAAP,oEAIN,uBACA,eAACF,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,6BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,yBADF,iCAGE,+BACE,uDACA,wEACA,0GACA,iHAEF,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAU+C,KAAK,KAAK9C,QA/BnB,kBAAMmC,GAAY,IA+BnC,uBACA,eAACQ,EAAA,EAAD,CAAOnD,GAAG,aAAaoC,KAAMM,EAAUU,OAAQF,EAA/C,UACE,cAACC,EAAA,EAAMjD,OAAP,CAAcmD,aAAW,EAAzB,SACE,cAACF,EAAA,EAAM/C,MAAP,2BAEF,cAAC+C,EAAA,EAAMhD,KAAP,UACE,eAACoD,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAK1C,UAAU,OAAO2C,UAAU,yBAAhD,UACE,cAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,uBAGA,cAACC,EAAA,EAAD,CAAKD,GAAG,KAAR,SACE,cAACP,EAAA,EAAKS,QAAN,CAAczC,KAAK,OAAO0C,YAAY,YAAYpD,MAAOiC,EAAUP,UAAWzB,SAAU,SAAAoD,GAAC,OAAIlB,EAAW,YAAakB,EAAEC,OAAOtD,eAGlI,eAAC0C,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAK1C,UAAU,OAAO2C,UAAU,wBAAhD,UACE,cAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,sBAGA,cAACC,EAAA,EAAD,CAAKD,GAAG,KAAR,SACE,cAACP,EAAA,EAAKS,QAAN,CAAczC,KAAK,OAAO0C,YAAY,WAAWpD,MAAOiC,EAAUN,SAAU1B,SAAU,SAAAoD,GAAC,OAAIlB,EAAW,WAAYkB,EAAEC,OAAOtD,eAG/H,eAAC0C,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAK1C,UAAU,OAAO2C,UAAU,qBAAhD,UACE,cAACJ,EAAA,EAAKK,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,mBAGA,cAACC,EAAA,EAAD,CAAKD,GAAG,KAAR,SACE,cAACP,EAAA,EAAKS,QAAN,CAAczC,KAAK,QAAQ0C,YAAY,QAAQpD,MAAOiC,EAAUL,MAAO3B,SAAU,SAAAoD,GAAC,OAAIlB,EAAW,QAASkB,EAAEC,OAAOtD,oBAK3H,eAACsC,EAAA,EAAMiB,OAAP,WACE,cAAC9D,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS0C,EAArC,oBAGA,cAAC5C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA5Eb,WACrBqC,EAAQC,GACRC,EAAaT,GACbK,GAAY,IAyEJ,gCAKJ,uBACA,uBApDF,aAsDE,qBAAI3B,UAAU,YAAd,UACE,6CAAe,iCAAS4B,EAAKL,eAC7B,4CAAc,iCAASK,EAAKJ,cAC5B,yCAAW,iCAASI,EAAKH,cAE3B,cAACnC,EAAA,EAAD,CAAQC,QAAQ,SAAS+C,KAAK,KAAK9C,QAnFjB,kBAAMqC,EAAQP,IAmFhC,kC,mCCpHF+B,EAASC,EAAQ,KAwGRC,MArGf,WACE,MAAkC5D,mBAAS,IAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KACA,EAA+C9D,mBAAS,IAAxD,mBAAO+D,EAAP,KAAuBC,EAAvB,KACA,EAAwBhE,mBAAS,IAAjC,mBAAOiE,EAAP,KAAaC,EAAb,KAwCMC,EAAW,SAAAjE,GACf,GAAIA,EAAO,CACT,IAAMkE,GAbYC,EAac,IAbTC,EAac,IAZvCD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,IAW9CL,EAAqB,CAAC,CAAEW,MAAO,aAxClB,SAACC,EAAMC,EAAMC,GAC5B,IAAIC,EAwCFC,CAASC,YAAW,kBATN,SAAC/E,GACjB,IAAMgF,EAAShF,EAAMiF,cACrBnB,EAAqBN,EAAO0B,QAAO,SAAAC,GAAC,OAA8C,IAA1CA,EAAEV,MAAMQ,cAAcG,OAAOJ,OAOzCK,CAAUrF,KAAQkE,GAjD5B,UAkDXJ,EAAqB,IAhBT,IAACK,EAAKC,EAiBzBR,EAAa5D,IAGTsF,EAAe,SAAAtF,GACL,YAAVA,IACJ8D,EAAqB,IAhCX,SAAC9D,GACX,GAAKA,IACD+D,EAAKwB,MAAK,SAAAC,GAAI,OAAIA,IAASxF,KAA/B,CACA,IAAMyF,EAAK,YAAO1B,GAClB0B,EAAMC,KAAK1F,GACX4D,EAAa,IACbI,EAAQyB,IA2BRE,CAAI3F,KAGN,OAAO,qBAAKb,GAAG,eAAR,SACL,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,0BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,mCACA,+BACE,4DAA8B,6EAA9B,OACA,wEAA0C,2DAE5C,eAACqG,EAAA,EAAD,CAAOlG,QAAQ,UAAf,8BACmB,8CADnB,oBAC6D,mDAD7D,wBAIA,cAACmG,EAAA,EAAD,CAAY1F,UAAU,OAAtB,SACE,cAAC2F,EAAA,EAAD,CACE,aAAW,uBACX,mBAAiB,eACjB1C,YAAY,eACZpD,MAAO2D,EACP1D,SAAU,SAAAoD,GAAC,OAAIY,EAASZ,EAAEC,OAAOtD,YAGpC6D,EAAe3C,OACd,cAAC6E,EAAA,EAASC,KAAV,CAAezE,MAAI,EAAnB,SACGsC,EAAehD,KAAI,SAACoF,EAAOlF,GAAR,OAClB,cAACgF,EAAA,EAASG,KAAV,CAEEC,SAAUpF,EACVpB,QAAS,kBAAM2F,EAAaW,EAAMxB,QAHpC,SAIGwB,EAAMxB,OAHF1D,QAKQ,GAErB,uBACA,gDACA,oBAAIZ,UAAU,gBAAd,SACG4D,EAAKlD,KAAI,SAAC2E,EAAMzE,GAAP,OAAe,6BAAeyE,GAANzE,iBCzC7BqF,MAvDf,WACE,MAA8BtG,mBAAS,IAAvC,mBAAOuG,EAAP,KAAgBC,EAAhB,KACA,EAAyCxG,oBAAS,GAAlD,mBAAOyG,EAAP,KAAoBC,EAApB,KAEA,EAAwB1G,mBAAS,GAAjC,mBAAO2G,EAAP,KAAaC,EAAb,KACA,EAAwB5G,mBAAS,GAAjC,mBAAO6G,EAAP,KAAaC,EAAb,KACA,EAAqC9G,oBAAS,GAA9C,mBAAO+G,EAAP,KAAkBC,EAAlB,KAIA,OAAO,sBAAK3H,GAAG,cAAR,UACL,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,0BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,4BACA,+BACE,wGACA,oDACA,6GAED,IACD,uBAAOJ,GAAG,eAAea,MAAOqG,EAASpG,SAAU,SAAAoD,GAAOmD,GAAkB,GAAQF,EAAWjD,EAAEC,OAAOtD,UACxG,uBACA,uBACA,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAM6G,GAAkB,IAA3D,0BACA,uBACA,uBACA,sBAAKrG,UAAU,UAAf,sBAAkC,+BAAOoG,EAAcF,EAAU,cAGrE,uBACA,eAACjH,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,0BACA,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,4BACA,+BACE,qFACA,mDACA,mDACA,4GAEF,4CAAc,uBAAOJ,GAAG,OAAOuB,KAAK,SAASV,MAAOyG,EAAMxG,SAAU,SAAAoD,GAAOyD,GAAgB,GAAQJ,EAAQrD,EAAEC,OAAOtD,aACpH,uBACA,4CAAc,uBAAOb,GAAG,OAAOuB,KAAK,SAASV,MAAO2G,EAAM1G,SAAU,SAAAoD,GAAOyD,GAAgB,GAAQF,EAAQvD,EAAEC,OAAOtD,aACpH,uBACA,uBACA,cAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMmH,GAAgB,IAAzD,uBACA,uBACA,uBACA,sBAAK3G,UAAU,QAAf,0BAAoC,+BAAO0G,EAzCpBE,WAAWN,GAAQM,WAAWJ,GAyCe,kB,QCnC7DK,MAff,WACE,OAAO,gCACL,qDACA,mDACA,+BACE,6BAAI,cAAC,IAAD,CAAMC,GAAG,eAAT,2BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,wBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,oBAAT,gCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,mBAAT,+BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,eAAT,2BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,gBAAT,mC,QCgDKC,MArCf,WACE,OACE,cAAC,IAAD,UACE,8BACE,eAAC9H,EAAA,EAAD,CAAM+H,MAAI,EAAV,UACE,cAAC,IAAD,CAAMF,GAAG,IAAT,SAAa,cAACxH,EAAA,EAAD,CAAQgD,KAAK,KAAb,uBACb,uBACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2E,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCvCCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.decffaf5.chunk.js","sourcesContent":["import { Card, Button } from 'react-bootstrap'\n\nfunction JavascriptAlert() {\n  const openSimpleAlert = () => alert(\"I am an alert box!\");\n\n  return <div id=\"javascript-alert\">\n    <Card>\n      <Card.Header>JavascriptAlert</Card.Header>\n      <Card.Body>\n        <Card.Title>Simple Alert</Card.Title>\n        <Card.Text>\n          Open the alert and verify the message matches <strong>I am an alert box!</strong>\n        </Card.Text>\n        <Button variant=\"primary\" onClick={openSimpleAlert} >Click</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default JavascriptAlert","import { useState } from \"react\";\nimport { Card } from 'react-bootstrap'\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\n\n\nfunction JqueryDate() {\n  const [value, onChange] = useState([new Date(), new Date()]);\n  return <div>\n    <Card>\n      <Card.Header>Js DateRangePicker</Card.Header>\n      <Card.Body>\n        <Card.Title>Js DateRangePicker</Card.Title>\n        <ul>\n          <li>Change the data of the DateRangePicker and validate that the <strong>Current date</strong> is updated correctly.</li>\n          <li>Press the x of the DateRangePicker and validate that the <strong>Current date</strong> fields are cleared.</li>\n        </ul>\n        <DateRangePicker\n          locale={'en'}\n          onChange={onChange}\n          value={value}\n        />\n        <br />\n        <br />\n        Current date:\n        <ul className=\"current-date\">\n          <li>From: <strong>{value ? value[0].toDateString() : ''}</strong></li>\n          <li>To:   <strong>{value ? value[1].toDateString() : ''}</strong></li>\n        </ul>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default JqueryDate","import { useState } from 'react';\nimport { Card, Button } from 'react-bootstrap'\n\nfunction CheckBox() {\n  const [checkboxValue, toggleCheckbox] = useState(false);\n\n  const [checkboxesValues, toggleCheckboxes] = useState([false, false, false, false, false]);\n\n  function changeCheckboxes(key) {\n    const newCheckBoxes = [...checkboxesValues]\n    newCheckBoxes[key] = !checkboxesValues[key]\n    toggleCheckboxes(newCheckBoxes)\n  }\n\n  function unCheckAll() {\n    toggleCheckboxes([false, false, false, false, false])\n  }\n\n  function checkAll() {\n    toggleCheckboxes([true, true, true, true, true])\n  }\n\n  return <div id=\"checkboxes\">\n    <h3>This would be a basic example to start with checkboxes using selenium.</h3>\n    <p>\n      The HTML input \"checkbox\" is an input element to enter an array of different\n      values.\n    </p>\n    <p>\n      Each input type checkbox has value attribute which is used to define the value submitted by the checkbox.\n    </p>\n    <Card>\n      <Card.Header>CheckBox</Card.Header>\n      <Card.Body>\n        <Card.Title>Single Checkbox</Card.Title>\n        <Card.Text>\n          Clicking on the checkbox will display a success message.\n        </Card.Text>\n        <label>\n          Checkbox:\n          <input id=\"single-checkbox\" type=\"checkbox\" checked={checkboxValue} onChange={() => toggleCheckbox(prevState => !prevState)} />\n        </label>\n        <div className=\"message\">Message: <span>{checkboxValue ? 'success' : ''}</span></div>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card className=\"multiple\">\n      <Card.Header>CheckBox</Card.Header>\n      <Card.Body>\n        <Card.Title>Checkboxes</Card.Title>\n        Check the below points before automating\n        <ul>\n          <li>Click on 'Check All' to check all checkboxes at once.</li>\n          <li>When you check all the checkboxes, button will change to 'Uncheck All'</li>\n          <li>When you uncheck at least one checkbox, button will change to 'Check All'</li>\n        </ul>\n        {checkboxesValues.map((checkbox, key) =>\n          <label key={key}>\n            Checkbox {key + 1}:\n            <input className=\"checkboxes\" type=\"checkbox\" checked={checkbox} onChange={() => changeCheckboxes(key)} />\n          </label>\n        )}\n        <br />\n        {checkboxesValues.length === checkboxesValues.reduce((a, b) => a + b) ?\n          <Button variant=\"primary\" onClick={unCheckAll}>Uncheck All</Button> :\n          <Button variant=\"primary\" onClick={checkAll}>Check All</Button>\n        }\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default CheckBox","import { useState } from 'react';\nimport { Card, Button, Modal, Form, Row, Col } from 'react-bootstrap'\n\nfunction BootstrapModal() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const initialUser = {\n    firstname: '',\n    lastname: '',\n    email: ''\n  }\n\n  const [showForm, setShowForm] = useState(false);\n  const [user, setUser] = useState(initialUser);\n  const [modalUser, setModalUser] = useState(initialUser);\n\n  const updateUser = (key, value) => {\n    const newUser = { ...modalUser }\n    newUser[key] = value\n    setModalUser(newUser)\n  }\n\n  const handleCloseForm = () => {\n    setModalUser(initialUser)\n    setShowForm(false)\n  }\n\n  const handleSaveForm = () => {\n    setUser(modalUser)\n    setModalUser(initialUser)\n    setShowForm(false)\n  }\n\n  const handleCleanUser = () => setUser(initialUser)\n\n  const handleShowForm = () => setShowForm(true);\n\n  return <div id=\"bootstrap-modals\">\n    <Card>\n      <Card.Header>BootstrapModal</Card.Header>\n      <Card.Body>\n        <Card.Title>Single Modal</Card.Title>\n        <Card.Text>\n          Check that the text inside the modal is equal to: <strong>Woohoo, you're reading this text in a modal!</strong>\n        </Card.Text>\n        <Button variant=\"primary\" onClick={handleShow}>Go somewhere</Button>\n        <Modal id=\"single-modal\" show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        </Modal>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card>\n      <Card.Header>BootstrapModal</Card.Header>\n      <Card.Body>\n        <Card.Title>Modal Form</Card.Title>\n        Evaluate the following points:\n        <ul>\n          <li>Opening of the modal.</li>\n          <li>Set fields (Name, Lastname and Email).</li>\n          <li>Save Changes, Changes must be reflected in the user information section.</li>\n          <li>Press the clean info button and verify that the user information is cleared.</li>\n        </ul>\n        <Button variant=\"primary\" size=\"sm\" onClick={handleShowForm}>Open Form</Button>\n        <Modal id=\"form-modal\" show={showForm} onHide={handleCloseForm}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal Form</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextFirstName\">\n                <Form.Label column sm=\"2\">\n                  FirstName\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" placeholder=\"Firstname\" value={modalUser.firstname} onChange={e => updateUser('firstname', e.target.value)} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextLastname\">\n                <Form.Label column sm=\"2\">\n                  Lastname\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"text\" placeholder=\"Lastname\" value={modalUser.lastname} onChange={e => updateUser('lastname', e.target.value)} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n                <Form.Label column sm=\"2\">\n                  Email\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control type=\"email\" placeholder=\"Email\" value={modalUser.email} onChange={e => updateUser('email', e.target.value)} />\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleSaveForm}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <br />\n        <br />\n        User Info:\n        <ul className=\"user-info\">\n          <li>firstname: <strong>{user.firstname}</strong></li>\n          <li>lastname: <strong>{user.lastname}</strong></li>\n          <li>email: <strong>{user.email}</strong></li>\n        </ul>\n        <Button variant=\"danger\" size=\"sm\" onClick={handleCleanUser}>Clean info</Button>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default BootstrapModal","import { useState } from 'react';\nimport { Card, Dropdown, InputGroup, FormControl, Alert } from 'react-bootstrap'\nconst movies = require('../movies.json')\nconst DEBOUNCE_TIME = 100\n\nfunction DataLoading() {\n  const [movieName, setMovieName] = useState('');\n  const [filteredMovies, filteredMoviesChange] = useState([]);\n  const [todo, setTodo] = useState([]);\n\n\n  const debounce = (func, wait, immediate) => {\n    var timeout;\n    return function () {\n      var context = this, args = arguments;\n      var later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n\n  const add = (value) => {\n    if (!value) return\n    if (todo.some(item => item === value)) return;\n    const _todo = [...todo]\n    _todo.push(value)\n    setMovieName('')\n    setTodo(_todo)\n  }\n\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const fetchData = (value) => {\n    const _value = value.toLowerCase()\n    filteredMoviesChange(movies.filter(m => m.title.toLowerCase().search(_value) !== -1))\n  }\n\n  const onSearch = value => {\n    if (value) {\n      const randomTime = getRandomInt(800, 2000)\n      filteredMoviesChange([{ title: 'loading' }])\n      debounce(setTimeout(() => fetchData(value), randomTime), DEBOUNCE_TIME)\n    } else filteredMoviesChange([])\n    setMovieName(value)\n  }\n\n  const onSelectItem = value => {\n    if (value === 'loading') return;\n    filteredMoviesChange([])\n    add(value)\n  }\n\n  return <div id=\"data-loading\">\n    <Card>\n      <Card.Header>DataLoading</Card.Header>\n      <Card.Body>\n        <Card.Title>Search and add Movie</Card.Title>\n        <ul>\n          <li>Search and select movies: <strong>WALL·E, Interstellar and Ratatouille</strong>.</li>\n          <li>Validate that the items appear in the <strong>list of movies.</strong></li>\n        </ul>\n        <Alert variant=\"warning\">\n          If you are using <strong>Selenium</strong>, preferably use <strong>explicit wait</strong> while movies load\n        </Alert>\n\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n            placeholder=\"Search Movie\"\n            value={movieName}\n            onChange={e => onSearch(e.target.value)}\n          />\n        </InputGroup>\n        {filteredMovies.length ?\n          <Dropdown.Menu show>\n            {filteredMovies.map((movie, key) =>\n              <Dropdown.Item\n                key={key}\n                eventKey={key}\n                onClick={() => onSelectItem(movie.title)}>\n                {movie.title}\n              </Dropdown.Item>)}\n          </Dropdown.Menu> : ''\n        }\n        <br />\n        <h5>List of Movies</h5>\n        <ul className=\"list-of-movie\">\n          {todo.map((item, key) => <li key={key}>{item}</li>)}\n        </ul>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default DataLoading","import { useState } from 'react';\nimport { Card, Button } from 'react-bootstrap'\n\nfunction SimpleForm() {\n  const [message, setMessage] = useState('');\n  const [showMessage, toggleShowMessage] = useState(false);\n\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [showValue, toggleShowValue] = useState(false);\n\n  function getTotal() { return parseFloat(num1) + parseFloat(num2) }\n\n  return <div id=\"simple-form\">\n    <Card>\n      <Card.Header>Simple Form</Card.Header>\n      <Card.Body>\n        <Card.Title>Input Message</Card.Title>\n        <ul>\n          <li>First Let us try be very simple with only one input field and a Button</li>\n          <li>Enter your message</li>\n          <li>Click on 'Show Message' button to display message entered in input field</li>\n        </ul>\n        {' '}\n        <input id=\"user-message\" value={message} onChange={e => { toggleShowMessage(false); setMessage(e.target.value) }} />\n        <br />\n        <br />\n        <Button variant=\"primary\" onClick={() => toggleShowMessage(true)} >Show Message</Button>\n        <br />\n        <br />\n        <div className=\"message\">Message: <span>{showMessage ? message : ''}</span></div>\n      </Card.Body>\n    </Card>\n    <br />\n    <Card>\n      <Card.Header>Simple Form</Card.Header>\n      <Card.Body>\n        <Card.Title>Sum of inputs</Card.Title>\n        <ul>\n          <li>First Let us try with Two input fields and a Button</li>\n          <li>Enter Value for a</li>\n          <li>Enter Value for b</li>\n          <li>Click on 'Get Total' button to display the sum of two numbers 'a and b'</li>\n        </ul>\n        <label>Num 1: <input id=\"sum1\" type=\"number\" value={num1} onChange={e => { toggleShowValue(false); setNum1(e.target.value) }} /></label>\n        <br />\n        <label>Num 2: <input id=\"sum2\" type=\"number\" value={num2} onChange={e => { toggleShowValue(false); setNum2(e.target.value) }} /></label>\n        <br />\n        <br />\n        <Button variant=\"primary\" onClick={() => toggleShowValue(true)} >Get Total</Button>\n        <br />\n        <br />\n        <div className=\"value\">Total value: <span>{showValue ? getTotal() : ''}</span></div>\n      </Card.Body>\n    </Card>\n  </div>;\n}\n\nexport default SimpleForm","import { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return <div>\n    <h1>Welcome to QA test!</h1>\n    <h2>List of sections:</h2>\n    <ul>\n      <li><Link to=\"/simple-form\">Simple-form</Link></li>\n      <li><Link to=\"/checkbox\">Checkbox</Link></li>\n      <li><Link to=\"/javascript-alert\">Javascript-alert</Link></li>\n      <li><Link to=\"/bootstrap-modal\">Bootstrap-modal</Link></li>\n      <li><Link to=\"/jquery-date\">Jquery-date</Link></li>\n      <li><Link to=\"/data-loading\">Data-loading</Link></li>\n    </ul>\n  </div>;\n}\n\nexport default Home","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport JavascriptAlert from './components/JavascriptAlert'\nimport JqueryDate from './components/JqueryDate'\nimport CheckBox from './components/CheckBox'\nimport BootstrapModal from './components/BootstrapModal'\nimport DataLoading from './components/DataLoading'\nimport SimpleForm from './components/SimpleForm'\nimport Home from './components/Home'\n\n\nimport {\n  Card, Button\n} from 'react-bootstrap'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Card body>\n          <Link to=\"/\"><Button size=\"sm\">Go home</Button></Link>\n          <br />\n          <br />\n          <Switch>\n            <Route path=\"/simple-form\">\n              <SimpleForm />\n            </Route>\n            <Route path=\"/checkbox\">\n              <CheckBox />\n            </Route>\n            <Route path=\"/javascript-alert\">\n              <JavascriptAlert />\n            </Route>\n            <Route path=\"/bootstrap-modal\">\n              <BootstrapModal />\n            </Route>\n            <Route path=\"/jquery-date\">\n              <JqueryDate />\n            </Route>\n            <Route path=\"/data-loading\">\n              <DataLoading />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Card>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}